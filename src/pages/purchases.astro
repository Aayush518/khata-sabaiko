---
import Layout from '../layouts/Layout.astro';
import Navbar from '../components/Navbar.astro';
import { translations } from '../i18n/translations';

const lang = Astro.url.searchParams.get('lang') || 'ne';
const t = translations[lang];
---

<Layout title={`खाता सबैको - ${t.nav.purchases}`}>
  <Navbar />
  
  <main class="max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8">
    <div class="bg-white rounded-lg shadow-lg p-6">
      <div class="flex justify-between items-center mb-8">
        <h1 class="text-3xl font-bold text-gray-900">{t.nav.purchases}</h1>
        <button id="addPurchase" class="bg-gradient-to-r from-green-600 to-teal-600 text-white px-6 py-2 rounded-lg shadow-md hover:from-green-700 hover:to-teal-700 transition-all duration-200 flex items-center gap-2">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
            <path fill-rule="evenodd" d="M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z" clip-rule="evenodd" />
          </svg>
          {t.common.add}
        </button>
      </div>

      <div class="mb-6">
        <div class="flex gap-4 mb-4">
          <input type="text" id="searchInput" placeholder={t.common.search} class="flex-1 rounded-lg border-gray-300 shadow-sm focus:ring-green-500 focus:border-green-500">
          <select id="filterDate" class="rounded-lg border-gray-300 shadow-sm focus:ring-green-500 focus:border-green-500">
            <option value="all">All Time</option>
            <option value="today">Today</option>
            <option value="week">This Week</option>
            <option value="month">This Month</option>
          </select>
        </div>
      </div>

      <div class="overflow-x-auto">
        <table class="min-w-full divide-y divide-gray-200">
          <thead class="bg-gray-50">
            <tr>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                {t.common.date}
              </th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                Dealer
              </th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                Items
              </th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                {t.common.total}
              </th>
              <th class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">
                {t.common.actions}
              </th>
            </tr>
          </thead>
          <tbody id="purchasesList" class="bg-white divide-y divide-gray-200">
            <!-- Purchases will be loaded here -->
          </tbody>
        </table>
      </div>
    </div>
  </main>
</Layout>

<script>
  import { db } from '../lib/db';
  
  function loadPurchases() {
    const purchases = db.getPurchases();
    const tbody = document.getElementById('purchasesList');
    if (!tbody) return;
    
    tbody.innerHTML = purchases.map(purchase => `
      <tr class="hover:bg-gray-50 transition-colors duration-150">
        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
          ${new Date(purchase.date).toLocaleDateString()}
        </td>
        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
          ${purchase.dealerName}
        </td>
        <td class="px-6 py-4 text-sm text-gray-500">
          ${purchase.items.map(item => `${item.name} (${item.quantity})`).join(', ')}
        </td>
        <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
          रू ${purchase.total.toLocaleString()}
        </td>
        <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
          <button onclick="viewPurchase(${purchase.id})" class="text-green-600 hover:text-green-900 mr-3">
            View
          </button>
          <button onclick="deletePurchase(${purchase.id})" class="text-red-600 hover:text-red-900">
            Delete
          </button>
        </td>
      </tr>
    `).join('');
  }

  // Initial load
  loadPurchases();

  // Add purchase handler
  document.getElementById('addPurchase')?.addEventListener('click', async () => {
    const dealerName = prompt('Enter dealer name:');
    if (!dealerName) return;

    const items = [];
    let addMore = true;

    while (addMore) {
      const name = prompt('Enter item name:');
      if (!name) break;

      const quantity = parseInt(prompt('Enter quantity:') || '0');
      const price = parseFloat(prompt('Enter price per unit:') || '0');

      items.push({
        name,
        quantity,
        price,
        total: quantity * price
      });

      addMore = confirm('Add another item?');
    }

    if (items.length === 0) return;

    const total = items.reduce((sum, item) => sum + item.total, 0);

    const purchase = {
      id: Date.now(),
      date: new Date().toISOString(),
      dealerName,
      items,
      total
    };

    db.addPurchase(purchase);
    loadPurchases();
  });

  // Make functions available globally
  window.viewPurchase = (id) => {
    const purchases = db.getPurchases();
    const purchase = purchases.find(p => p.id === id);
    if (!purchase) return;

    const details = `
      Date: ${new Date(purchase.date).toLocaleDateString()}
      Dealer: ${purchase.dealerName}
      
      Items:
      ${purchase.items.map(item => `- ${item.name}: ${item.quantity} x रू ${item.price} = रू ${item.total}`).join('\n')}
      
      Total: रू ${purchase.total}
    `;

    alert(details);
  };

  window.deletePurchase = (id) => {
    if (confirm('Are you sure you want to delete this purchase?')) {
      const purchases = db.getPurchases();
      const filtered = purchases.filter(p => p.id !== id);
      localStorage.setItem('khata_purchases', JSON.stringify(filtered));
      loadPurchases();
    }
  };

  // Search functionality
  document.getElementById('searchInput')?.addEventListener('input', (e) => {
    const searchTerm = (e.target as HTMLInputElement).value.toLowerCase();
    const purchases = db.getPurchases();
    const filtered = purchases.filter(purchase => 
      purchase.dealerName.toLowerCase().includes(searchTerm) ||
      purchase.items.some(item => item.name.toLowerCase().includes(searchTerm))
    );
    
    const tbody = document.getElementById('purchasesList');
    if (!tbody) return;
    
    tbody.innerHTML = filtered.map(purchase => `
      <tr class="hover:bg-gray-50 transition-colors duration-150">
        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
          ${new Date(purchase.date).toLocaleDateString()}
        </td>
        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
          ${purchase.dealerName}
        </td>
        <td class="px-6 py-4 text-sm text-gray-500">
          ${purchase.items.map(item => `${item.name} (${item.quantity})`).join(', ')}
        </td>
        <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
          रू ${purchase.total.toLocaleString()}
        </td>
        <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
          <button onclick="viewPurchase(${purchase.id})" class="text-green-600 hover:text-green-900 mr-3">
            View
          </button>
          <button onclick="deletePurchase(${purchase.id})" class="text-red-600 hover:text-red-900">
            Delete
          </button>
        </td>
      </tr>
    `).join('');
  });
</script>